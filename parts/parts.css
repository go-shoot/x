section {
    font-size: calc(var(--font,1.2)*1em); 
    padding: 2rem 0; 
}
details {
    position: relative; 
    user-select: none; -webkit-user-select: none; 
    transform: translateY(-100%); max-height:0;
    transition: transform .5s, max-height .5s;

    &.showing {transform: none; max-height:50em;}
    
    summary {
        position: absolute !important; left: 1.5em; bottom: -1.5em; 
        width: 1.2em; height: 2.4em; 
        border-bottom-left-radius: 9em; border-bottom-right-radius: 9em; 
        background: var(--theme); color: black; 
        display: flex; flex-direction: column; justify-content: end; 
        touch-action: none; 
        line-height: 1.5; 
        z-index: 1; 
        transition: opacity .5s, height .5s !important; 

        .showing & {height: calc(2.4em + 100%);}
        &::before,&::after {
            line-height: .6; color: var(--theme-alt);
        }
        &::before {content: '\e00d';}
        &::after  {content: '\e00e';}
    }
    p {
        text-align: justify; line-height: 1.5; font-size: .9em; 
        padding: 0 .5em 0 3.5em; 
        transition: opacity .5s;
    }
    img:only-of-type {
        width: 90%; max-width: 30em; 
        margin: 1em 0; 
        display: block; 
    }
    &:not(.showing) p, &:not(.showing) summary::before,
    &.showing summary::after {
        opacity: 0;
    }
}

nav {
    .sorter {grid-area: 1/3/1/4;}
    .filter {
        &#group {grid-area: 1/2/1/3;}
        &#type  {grid-area: 2/2/2/3;}
        &#spin,&#prefix {grid-area: 2/3/2/4;}
    }
    output {
        grid-area: 1/4/2/5; place-self: center end;
        font-size: 2em;

        &:not(:empty)::after {
            content: 'æ¬¾';
            font-size: .9rem;
            margin-left: .1em;
            vertical-align: .05em;
        }
    }
    fieldset {
        all: unset;
        justify-self: start; 
        max-width: 100%;
        padding-right: .6em; 
        display: flex; align-items: center; gap: .3rem;
        overflow: scroll hidden; scrollbar-width: none;
        background: var(--overlay2); border-radius: 9em; 
        --color: hsl(var(--hue), 90%, calc(50% + var(--b-adj)));

        label img {
            height: 1.2em; 
            margin-top: .05em; 
        }
        legend {
            float: left; display: contents;
            &::before {
                content: attr(title);
                padding: 0 0 0 .2em;
                min-width: 2.8em; height: 100%; 
                line-height: 1.8rem; 
                color: black; font-size: .9em;
                background: var(--color);
                border-top-left-radius: 9em; border-bottom-left-radius: 9em;
            }
            .sorter &::before {background: silver;}
            .filter:not(:has([value$=motif])) &::before {cursor: pointer;}
        }
        label {
            border-bottom: .1rem solid transparent; 
            padding: 0 .1rem; 
            height: 1.4rem; 
            line-height: 1.5rem;
            white-space: nowrap;

            #type & {padding: 0;}
            &:has(:checked) {
                color: var(--theme); border-color: var(--type,--theme); 
            }
            &:has([value$=remake],[value$=collab],[value$=hasbro]) {
                font-size: .9em;
            }
        }
    }
    .magnifier {
        grid-area: 2/4/3/5; justify-self: flex-end;
        display: flex; gap: .3em;

        >* {display: none;}
        @media (max-width:630px) {
            label,&::before,&::after {
                font-size: 1.1rem; color: var(--theme);
                line-height: 1.7em;
            }
            &::before,&::after {
                color: gray;
            }
            label:has(+label>:checked),
            label:has(:checked)+label {
                display: inline-block;
            }
            &:has(label:first-of-type>:checked)::before,
            label:has(+label>:checked)::before {
                content: '\e00c';
            }
            label:has(:checked)+label::before,
            &:has(label:last-of-type>:checked)::after {
                content: '\e00b';
            }
        }
        @media (min-width:631px) {
            & {grid-area: 1/5/3/6;}
            continuous-knob {
                display: inline-grid;
                margin-top: .15em; 
                font-size: .9em;
    
                &::part(output) {color: transparent;}
            }
        }
    }
}
@media (max-width: 630px) {
    nav:has(form.blade) {
        grid-template-columns: 3em 1fr 6em auto;

        #spin {grid-area: 1/3/1/4;}
        .sorter {
            grid-area: 2/2/2/4 !important; justify-self: end;
            margin-right: 0;
        }
    }
}