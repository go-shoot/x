:host {
    min-width: 15em; max-width: 15em; min-height: 15em; max-height: 15em;
    --icon: 1.6em;
    display: inline-grid;
    grid-template: 2em auto .2em .9em .9em / var(--icon) calc(50% - var(--icon)) auto var(--icon) var(--icon);
    padding: .3em .4em; margin: .1rem;
    overflow: hidden;
    position: relative;
    cursor: pointer;
    opacity: 1 !important; transition: opacity .5s;

    &::after,object {
        position: absolute; right: 0; z-index: -1;
    }
    h4,h5,dd {text-shadow: 0 0 .05rem,0 0 .05rem black;}
}
:host(:only-of-type) {margin: auto;}
:host(:is(:target,.target)) {
    animation: highlight 1s .5s ease 3;
    scroll-margin-top: 5rem;
}
@keyframes highlight {from {filter:brightness(300%);} }
:host(.bsb)::after {
    content: url(../img/reincarnated.svg#bsb); 
    width: 10em;
    transform: rotate(-135deg) translate(-.15em,1.9em);
}
:host(.mfb)::after {
    content: url(../img/reincarnated.svg#mfb); 
    width: 9em;
    transform: translate(2em,-1.6em) rotate(15deg);
}
:host(.bbb)::after {
    content: url(../img/reincarnated.svg#bbb); 
    width: 9em;
    transform: translate(2em,-1.6em) rotate(15deg);
}
:host img {
    filter: drop-shadow(0 0 .1rem var(--on));
    &[alt=types] {filter: drop-shadow(0 0 .1rem var(--type));}
    &[alt=lines] {filter: drop-shadow(0 0 .05rem var(--line));}
}
:host figure img {filter: drop-shadow(0 0 .4em hsla(0,0%,100%,.3));}
:host svg {filter: drop-shadow(0 0 .2em var(--type));}

:host {
    h4 {grid-area: 4/2/6/3;}
    .chi:nth-of-type(1) {grid-area: 4/2/5/4;}
    .chi:nth-of-type(2) {grid-area: 5/2/6/4;}
    .chi:nth-of-type(1):not(:has(+.chi)) {grid-area: 4/2/6/3;}
    .jap {grid-area: 1/1/3/2;}
    .eng {grid-area: 2/1;}
    figure {grid-area: 2/1/3/-1;}
    div {grid-area: 2/1/3/-1;}
    p {grid-area: 1/3/-1/-1;}
    dl {grid-area: 2/2/-1/-1;}
    strong {grid-area: 2/4;}
    ul {grid-area: 4/1/-1/-1;}
    ::slotted(a) {grid-area: 1/1;}
    ::slotted(a:not(:empty)) {grid-area: 2/2;}
}
:host(.ratchet) h4 {grid-area: 4/1/6/3;}

:host object {
    width: 100%;
}
:host h5 {
    line-height: normal; /*index*/
    
    * {
        color: var(--on);
        display: inline-block;
    }
    &.chi {
        color: var(--type);
        place-self: center start;
        font-size: .75em;
        margin: .15em 0 0 .2em;
        letter-spacing: .1em;
    
        span {
            -webkit-text-stroke: var(--type) .1em; paint-order: stroke fill;
            transform: translateX(calc(50%*(var(--s) - 1) + .025em)) scale(var(--s)); --s: .95;
            letter-spacing: calc(var(--gap)/var(--s)); --gap: .175em;
            margin-right: calc((2em + var(--gap))*(var(--s) - 1));
        }
        sub {
            max-width: 2em;
            vertical-align: middle;
            font-size: .5em;
            margin: 0 0 .2em .2em;
            letter-spacing: 0; line-height: 1;
        }
    }
    &.jap,&.eng {
        writing-mode: vertical-lr;
        align-self: end;
        font-size: .65em;
        margin-bottom: -.1em;
    
        sub {
            vertical-align: unset;
            font-size: .7em;
            margin-inline-start: .3em;
        }
    }
    &.jap {
        margin-right: -.1em;
        justify-self: end;
    }
    &.eng {
        color: var(--type);
        margin-left: -.2em;
        text-transform: uppercase;
        white-space: break-spaces;

        span {color: var(--on);}
    }
}
:host ul {
    display: flex; gap: .2em;

    li {
        ul:not(:has(img[alt^=type])) &:first-child {margin-left: auto;}
        &:has(img[alt^=type]) {
            width: var(--icon);
            margin-right: auto;
        }
        &:has(img[alt^=system]) {
            order: 2;
            width: 2.5em;
        }
        &:has(img[alt^=line]) {
            order: 2;
            width: 1.5em;
        }
        &[title] {
            order: 3;
            line-height: 1.8;
            font-size: 1.1em;
        }
        &[title=simple] {
            order: 1;
            margin-right: .2em;

            :host(.ratchet) & {margin-right: 6.3em;}
        }
        img {
            object-fit: contain;
            height: 100%; width: 100%;
        }
    }
}
:host(.CX.motif) ul::before {
    content: '';
    width: 1.4em;
    background: url(../img/blade/CX/motif/DR.png) center / contain no-repeat;
    filter: saturate(0) brightness(99);
}

::slotted(a:not(:empty)) {
    font-size: .8em;
    margin: 0 0 -.6em -.3em;
    place-self: end start;

}
::slotted(a:not(:empty))::before {
    content: '\e03c';
    font-size: 1.45em;
    transform: translate(.4em,-.4em); display: inline-block;
}

:host h4 {
    justify-self: start;
    font-size: 1.5em; line-height: 1.3;
    color: var(--type);
    margin-left: .05em;
}
:host(.ratchet) h4 {
    color: hsl(var(--hue),70%,50%);
}

:host dl {
    place-self: end;
    display: grid; gap: .4em .2em;
    grid-template: repeat(2,1.5em) / repeat(2,auto) minmax(2.1em,max-content) minmax(1.1em,max-content);
    margin: 0 .2em .05em 0;

    dt {
        font-size: .6em;
        text-align: right; line-height: 1.1;
        white-space: pre;
        margin-left: 1em;
    }
    dd {
        font-size: 1.6em; font-style: italic;
        text-align: left; line-height: .8;
    }
    :is(dt,dd):first-of-type {
        grid-area: 1/-2/2/-1;
    }
    dt:first-of-type {
        position: absolute; right: 0;
        border-bottom: .2em solid;
        transform: translate(-1em,-1.9em);
        width: 3em;
        line-height: 1.4;
    }
    dd:first-of-type {
        text-align: right;
        transform: translateX(-.4em);
    }
    dd:first-of-type~* {
        grid-row-start: 2;
    }
    sup {
        margin-left: .15em;
        line-height: 0;
        position: absolute;
    }
    small {
        font-size: .6em;
        margin-left: .1em;
        vertical-align: middle;
    }
}

:host strong {
    align-self: end;
    font-size: .6em; color: silver;
    writing-mode: vertical-lr;
    margin: 0 0 .2em -.4em;
}

:host figure {
    place-self: center;
    width: 6em; height: 6em;

    img {
        width: 100%; height: 100%;
        object-fit: contain;
    }
}
:host p {
    text-align: left; font-size: .6em;
    line-height: 1.4; letter-spacing: .03em;
    margin: 0; padding-left: .5em;
    overflow: hidden;

    &::before {
        content: '一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一';
        width: 100%; height: 100%;
        float: left;
        visibility: hidden;
        shape-outside: polygon(0% 14%,75% 50%,0% 86%);
    }
    u {
        border-bottom: .15em dotted var(--theme);
        line-height: 1; display: inline-block;
    }
}
:host div {
    position: absolute; inset: 5em;

    svg {
        position: absolute; left: 50%; top: 50%;
        transform: translate(-50%,-50%) rotate(var(--angle)) translateY(4.8em);
        width: 1.8em;

        &.att {--angle: 000deg;}
        &.bal {--angle: 180deg;}
        &.sta {--angle: -90deg;}
        &.def {--angle: 090deg;}
    }
    use {
        stroke: var(--type); fill: none;
        
        :host(.att) .att &, :host(.bal) .bal &, :host(.def) .def &, :host(.sta) .sta & {
            fill: var(--type);
        }
    }
}

table {
    white-space: nowrap; border-spacing: 0;
    margin: auto;

    th {
        position: relative;
        height: 4.5em; min-width: 4em;
        font-weight: normal;

        div {
            display: inline-block; vertical-align: .7em;
        }
        &:not(:first-child) {color: black;}
        &::after {width: 4em;}
    }
    thead:has(+tbody:empty) {
        display: none;
    }
    tbody:empty::after {
        content: '未有結果'; font-size: 1.5em;
    }
    tbody tr {
        height: 1.4rem;
        --width:.45em;
        background: repeating-linear-gradient(45deg, var(--light) 0 var(--width), var(--dark) var(--width) calc(1.5*var(--width)));
        
        &.H {background: var(--dark);}
        &.hidden {display: none;}
    }
    td {
        padding: 0 var(--pad); --pad: .3em;
        position: relative;
        text-align: left;

        &:first-child {
            color: deepskyblue;
        }
        &[abbr][headers=ratchet] {
            text-align: center;
            min-width: 4em;
        }
        &[abbr][headers=bit],&:first-child {
            text-align: right;
        }
        &[abbr]:has(+:not([abbr])),&[headers=ratchet],&:first-child {
            font-family: Fira Code,COND;
        }
        tr[style]:not(:has(td:nth-child(8))) &:nth-child(2),
        tr[style]:has(td:nth-child(8)) &:nth-child(3) {
            color: var(--coat,transparent);
        }
    }
}
td {
    * {pointer-events: none;}
    sub {
        font-size: .75em;
    }
    &:not(:first-child) sub {
        margin-left: .2em;
        line-height: 0;
    }
    &:first-child sub {
        position: absolute; right: .15em; bottom: .1em;
        scale: .9 1; letter-spacing: -.05em;
    }
    small {
        letter-spacing: -.05em;
    }
}

tbody tr:nth-last-child(1 of :not([hidden])) td {
    border-bottom: solid .5px var(--on);
}
tbody td {
    border-top: solid .5px var(--on);
}
td[abbr]:not(.fusion),td:empty {
    border-left: solid .5px var(--on);
}
td[abbr]+td:not([abbr]) {
    border-left: solid .5px hsl(0,0%,55%);
}
thead {font-size: min(3vw,.7em);}
tbody {font-size: min(2.75vw,.7em);}
